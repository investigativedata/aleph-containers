version: "3.2"

services:
  postgres:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: io-elasticsearch
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    command: [ "redis-server", "--save", "3600", "10" ]
    volumes:
      - redis-data:/data

  ingest-file:
    image: io-ingest
    tmpfs:
      - /tmp:mode=777
    volumes:
      - archive-data:/data
    depends_on:
      - postgres
      - redis
    restart: on-failure
    env_file:
      - aleph.env

  worker:
    image: io-aleph
    command: aleph worker
    restart: on-failure
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - ./aleph-scrt-key:/aleph-scrt-key:ro
    env_file:
      - aleph.env

  shell:
    image: io-aleph
    command: /bin/bash
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "./mappings:/aleph/mappings"
      - "~:/host"
      - ./aleph-scrt-key:/aleph-scrt-key:ro
    env_file:
      - aleph.env

  api:
    image: io-aleph
    command: gunicorn --config /aleph/gunicorn.conf.py --workers 6 --log-level info --log-file -
    expose:
      - 8000
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - worker
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - ./aleph-scrt-key:/aleph-scrt-key:ro
    env_file:
      - aleph.env

  ui:
    image: ghcr.io/alephdata/aleph-ui-production:${ALEPH_TAG:-3.15.4}
    depends_on:
      - api
    ports:
      - "8080:8080"

volumes:
  archive-data: {}
  postgres-data: {}
  redis-data: {}
  elasticsearch-data: {}
